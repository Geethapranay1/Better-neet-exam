/* MAIN */
const BigEnc = {
    /* API */
    encode: (data) => {
        let encoded = 0n;
        for (let i = 0, l = data.length; i < l; i++) {
            encoded |= BigInt(data[i]) << ((BigInt(l) - BigInt(i) - 1n) * 8n);
        }
        return encoded;
    },
    decode: (data) => {
        if (data < 0n)
            throw new Error('Negative BigInts are not supported'); //TODO: Support them too
        const decoded = [];
        while (data) {
            decoded.push(Number(data & 0xffn));
            data >>= 8n;
        }
        return new Uint8Array(decoded.reverse());
    }
};
/* EXPORT */
export default BigEnc;
